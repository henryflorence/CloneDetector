How to run this program
-----------------------

1) Unzip the jar and lib/ folder into the same folder.
2) execute: java -jar clonedetector.jar testFile.java, where testFile.java is the file under test

The lib folder contains required library jars which are set as part of the classpath for the program jar.

* java -jar clonedetector.jar -h will display: 
basic usage: java -jar clonedetector.jar file.java
-h -> display this message and exit
-d -> display output from preprocessed stage
-m -> use min hash fingerprinting
-j -> java mode : default mode
-c -> generic code mode
-t -> plain text mode
-l5 -> match min 5 duplicate lines, default: 6

* example usage: java -jar clonedetector.jar -t warAndPeace.txt, for large plaintext clone detection.

Development Section
-------------------
using maven2(.2.1) build system: http://maven.apache.org/download.html

commands run in root directory (same as this file):
mvn clean
mvn compile
mvn test  // if we can be bothered
mvn package
mvn package assembly:assembly // create lib folder and set classpath in jar
mvn emma:emma // code coverage
mvn cobertura:cobertura // the pretty one

to run packaged jar:
java -jar target/clonedetector-1.0-SNAPSHOT.jar

to create eclipse project files:
mvn eclipse:eclipse

probably best that we all have seperate .project folders and target folders on our local machines

mvn project structure (they are all like this):

CloneDetector
|-- pom.xml
|-- src
|   |-- main
|   |   `-- java
|   |       `-- com
|   |           `-- github
|   |               `-- saniul
|   |                   `-- clonedetector
|   |                       `-- Main.java
|   `-- test                                    // if we can be bothered
|       `-- java
|           `-- com
|               `-- saniul
|                   `-- clonedector
|                       `-- AppTest.java
`-- target                                      // created by 'mvn compile' removed by 'mvn clean'
    |-- classes
    |   `-- com 
    .   ...blah.. .class
    .
    .                                           // test classes, reports, all that stuff
    `-- clonedetector-1.0-SNAPSHOT.jar          // created by 'mvn package'
        
more info on maven2: http://maven.apache.org/guides/getting-started/index.html

fix for environment variable unbound error in eclipse:
Window->Build Path->Classpath Variables
Click "new..."
M2_REPO = ~/.m2/repository

